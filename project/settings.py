"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import sys

from pathlib import Path

# SHERRIFF: Added import os here for the django_heroku fix at the bottom.
import os

# django-environ for sending emails
import environ
env = environ.Env()
environ.Env.read_env()

# SMTP SETTINGS
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = 587
EMAIL_USE_TLS = True
# EMAIL_HOST_USER = env('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')
# RECIPIENT_ADDRESS = env('RECIPIENT_ADDRESS')
#DEFAULT_FROM_EMAIL = 'A-18<EMAIL_HOST_USER>'

EMAIL_HOST='smtp.gmail.com'
EMAIL_HOST_USER='a18.django.email@gmail.com'
EMAIL_HOST_PASSWORD='wdvdzjatvmjbtuof'
RECIPIENT_ADDRESS='a18.django.email@gmail.com'

# CELERY SETTINGS 
#CELERY_BROKER_URL = 'redis://127.0.0.1:6379'  # for local Redis
#CELERY_BROKER_URL = 'redis://:p170f2e76e1d5aaed5052eca2f1c77f6b403b63b5c1bb0d89db600499c7181f6b@ec2-52-72-202-71.compute-1.amazonaws.com:17420' # Heroku Redis (can't connect)
CELERY_BROKER_URL = 'rediss://:p170f2e76e1d5aaed5052eca2f1c77f6b403b63b5c1bb0d89db600499c7181f6b@ec2-52-72-202-71.compute-1.amazonaws.com:17420' # Heroku Redis (TSL URL - works)
#CELERY_BROKER_URL = 'redis://default:6ifddyLV78mynclkRDPre2I6y1PvYIN8@redis-17717.c8.us-east-1-4.ec2.cloud.redislabs.com:17717' # Redis Enterprise Cloud (also works)
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json' 
CELERY_TIMEZONE = 'America/New_York'
CELERY_RESULT_BACKEND = 'django-db'

# CELERY BEAT SETTINGS
# CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

#### CELERY & CELERY BEAT COMMANDS ####
########################################
# https://docs.celeryproject.org/en/stable/userguide/monitoring.html#workers
# https://docs.celeryproject.org/en/latest/userguide/workers.html#inspecting-workers
# https://docs.celeryproject.org/en/latest/userguide/workers.html#restarting-the-worker
### start workers ###
# celery -A project.celery worker --pool=solo -l info
# celery -A project beat -l INFO
### shell ###
# celery shell
### inspect scheduled (ETA/countdown) tasks ###
# celery -A project inspect scheduled
### revoke tasks ###
# celery -A project control revoke <task_id>
### revoke scheduled tasks ###
# https://newbedev.com/how-to-inspect-and-cancel-celery-tasks-by-task-name
### purge all waiting tasks (configured task queues) ###
# celery -A project purge
# OR in terminal:
# from project.celery import app
# app.control.purge()
### get tasks ###
#  from celery import current_app

#  current_app.loader.import_default_modules()

#  tasks = list(sorted(name for name in current_app.tasks
#                             if not name.startswith('celery.')))
#  return tasks
########################################

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_URL = "/media/"
#MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f6-r(803!q!#k5)8$7ww!ayoo=jx#_sq!^^_57qd4y3&19!9nh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# SHERRIFF: Added both the local host and herokuapp.com here to handled the DisallowedHost error.
ALLOWED_HOSTS = ['localhost','127.0.0.1','project-a-18-organizer.herokuapp.com']


# Application definition

INSTALLED_APPS = [
    'organizer.apps.OrganizerConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap5',

    # for OAuth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'storages',
    'django_celery_results',
    #'django_celery_beat'

    'django_filters',
    'datetimewidget',
    'holidays',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# Heroku Postgres database info
# separate test database needed b/c Heroku users do not have the privilege to create a new database
if 'test' in sys.argv:
    # test database
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'dejldlaja8q8te',
            'USER': 'jyifidcixffiln',
            'PASSWORD': '1d0d47986e3fab2e959a4cc66b36e20c9b05238f77b3dba41ec686ca59c074c0',
            'HOST': 'ec2-18-207-72-235.compute-1.amazonaws.com',
            'PORT': '5432',
            'TEST': {
                'NAME': 'dejldlaja8q8te',
            }
        }
    }
else:
    # default database
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': 'd54vtqjtjlc4kk',
            'USER': 'rideqdwbyhjosd',
            'PASSWORD': '5c14bdff82f7f5d3555ae9aec8ab35d7604874db19261e5d57e76ca4077a9712',
            'HOST': 'ec2-44-193-150-214.compute-1.amazonaws.com',
            'PORT': '5432',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

# SHERRIFF: Added the static_root variable here to fix an erorr with static files not being found
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# SHERRIFF
# Activate Django-Heroku.
# Use this code to avoid the psycopg2 / django-heroku error!  
# Do NOT import django-heroku above!
try:
    if 'HEROKU' in os.environ:
        import django_heroku
        django_heroku.settings(locals(), test_runner=False)
except ImportError:
    found = False

# added for OAuth
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

# added for OAuth
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

#### STEPS TO RESET DATABASE ####
# in main branch
# reset database on Heroku (make sure it's the right one!)
# delete __pycache__ and all migration .py files from /organizer/migrations
# DO NOT DELETE __init__.py FROM /organizer/migrations
# run "python manage.py makemigrations" and "python manage.py migrate" locally
# increment SITE_ID by 1
# create "admin" superuser
# run server locally
# TEMPORARILY decrement SITE_ID, back to what it was before the push, and save settings.py
# log in to the admin page
# add the Heroku site, localhost:8000, 127.0.0.1:8000 to "Sites" in the admin page
# Add the Google OAuth2 to "Social Apps" in the admin page
# fill in the client ID and secret key (from Julian's account)
# select the sites added previously, then save the Social App
# RE-INCREMENT the SITE_ID to what it was when you pushed it (no further pushes/commits should be necessary)
# push changes to GitHub MAIN BRANCH
# OAuth, everything should work now
SITE_ID = 25
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

#https://www.section.io/engineering-education/how-to-upload-files-to-aws-s3-using-django-rest-framework/
#https://aws.amazon.com/s3/getting-started/
AWS_ACCESS_KEY_ID = 'AKIAWGN3XIVBPUJESSLJ'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'neworganizer-a18'  # using us-west-1 server
AWS_S3_FILE_OVERWRITE = False
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

#https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html
S3_USE_SIGV4 = True

# AWS_STORAGE_BUCKET_NAME = 'a18-organizer-new'  # using us-east-2 server
# AWS_S3_REGION_NAME = 'us-east-2'
# AWS_S3_SIGNATURE_VERSION = 's3v4'
# AWS_S3_ADDRESSING_STYLE = 'virtual'
# AWS_DEFAULT_ACL = 'private'